import pylab 
import numpy
import math
#Author Ryan Vogt
#Computer Science and Applied Mathematics major at RIT
#Program to solve the simple situation xn+1=max((A/(xn*xn-1)),(B/((xn-1)*(xn-2)) 
class DifferenceEquationSimple():
        

        def giveGreater(self,left,right):
                if (left>right):
                        return left
                else:
                        return right
        





        def Algo(self,a,b,x0,x1,x2,extension):
                print "Sequences for xn+1=max((A/(xn*xn-1)),(B/((xn-1)*(xn-2)) " + "\n" 
                specificTrial="A =" + str(a) + " B=" +str(b) + " x0=" +str(x0) + " x1=" + str(x1)
                sequence=[]
                sequence.append(x0)
                sequence.append(x1)
                for x in range(1000):
                        left=a/(x2*x1)
                        right=(b)/(x1*x0)
                        newValue=self.giveGreater(left,right)
                        x0=x1
                        x1=x2
                        x2=newValue
                        sequence.append(x2)
                print "Sequence generated by " + specificTrial + "\n" 
                print sequence
                print "\n"
                low = min(sequence)
                high = max(sequence)
                pylab.title(specificTrial)
                pylab.plot(sequence,sequence,'co')
                pylab.ylim([math.ceil(low-0.5*(high-low)), math.ceil(high+0.5*(high-low))])
                pylab.xlim([math.ceil(low-0.5*(high-low)), math.ceil(high+0.5*(high-low))])
                pylab.savefig('figure' + str(extension)+".png")
                #pylab.show()

                










results=DifferenceEquationSimple()
results.Algo(1.0,1.0,1.0,.5,2,1)
results.Algo(2.0,2.0,2.0,1,.5,2)
results.Algo(.5,.5,.5,2,1,3)
results.Algo(1.0,.5,2,4,.25,4)
results.Algo(.5,.25,2,.25,4,5)
results.Algo(2.0,.5,(2.0/3.0),(1.0/3.0),(1.0/3.0),6)
results.Algo(3.0,2.0,(2.0/3.0),(1.0/3.0),(2.0/3.0),7)
results.Algo(2.0,1.0,(2.0/3.0),(1.0/3.0),1.0,8)
results.Algo(.5,1.0,(2.0/3.0),(1.0/3.0),2.0,9)
results.Algo(.25,.5,(2.0/3.0),(1.0/3.0),.5,10)
results.Algo(.5,2.0,(2.0/3.0),(1.0/3.0),4,11)
results.Algo(2.0,3.0,(2.0/3.0),(1.0/3.0),3.25,12)
results.Algo(1.0,2.0,(2.0/3.0),(1.0/3.0),1,13)
results.Algo(1.0,2.0,.5,2.0,.75,14)
results.Algo(1.0,2.0,4.0,.25,.5,15)
results.Algo(1.0,2.0,1.0,1.0,.1,16)
results.Algo(1.0,2.0,2.0,.75,.6,17)
results.Algo(1.0,2.0,4.0,2.0,2,18)